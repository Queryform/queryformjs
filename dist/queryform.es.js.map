{"version":3,"file":"queryform.es.js","sources":["../src/queryform.js"],"sourcesContent":["class Queryform {\n\n  constructor(websiteId = null, apiRoute = 'https://queryform.co/api/website/') {\n    this.websiteId = websiteId;\n    this.domainUTMs = [];\n    this.apiRoute = apiRoute;\n  }\n\n  /**\n   * Fetch domain parameters from the API\n   * @returns {Promise<void>}\n   */\n\n  async #fetchDomainParams() {\n    try {\n      const response = await fetch(`${this.apiRoute}${this.websiteId}`);\n      if (response.ok) {\n        this.domainUTMs = await response.json();\n      } else {\n        console.warn('Failed to fetch domain parameters:', response.statusText);\n      }\n    } catch (err) {\n      console.warn('Error fetching domain parameters:', err);\n    }\n  }\n\n  /**\n   * Initialize the Queryform\n   * @param {Object} config - Configuration object\n   * @param {boolean} config.debug - Enable debug mode\n   * @returns {void}\n   * @example\n   * Retrieve domain parameters from Queryform API\n   * const queryform = new Queryform('xxxx-xxxx-xxxx-xxxx');\n   * queryform.init();\n   * @example\n   * Use local domain parameters\n   * const queryform = new Queryform();\n   * queryform.init({ local: true }, [ { param: 'utm_source', class_name: 'qf_utm_source' } ]);\n   */\n\n  async init(config = { debug: false, local: false }, utms = []) {\n    if(config.debug) this.#logInitialization();\n    config.local ? await this.#fetchLocalParams(utms) : await this.#fetchDomainParams();\n    await this.#configureQueryform();\n  }\n\n  /**\n   * Fetch local domain parameters\n   * @param {Array} utms - Local domain parameters\n   * @returns {void}\n   * @private\n   */\n\n  async #fetchLocalParams(utms) {\n    // validate the format of the utms array\n    if (!Array.isArray(utms)) {\n      console.warn('Invalid utms array:', utms);\n      return;\n    }\n    // validate the format of the utms array sub-items\n    if (utms.some(({ param, class_name }) => !param || !class_name)) {\n      console.warn('Invalid utms array sub-items:', utms);\n      return;\n    }\n    // store the utms array\n    this.domainUTMs = utms;\n  }\n\n  /**\n   * Configure the Queryform\n   * @returns {void}\n   * @private\n   */\n\n  #configureQueryform() {\n    // Check if domainUTMs is empty\n    const queryParams = this.#parseURLParams();\n    // Store the query params\n    this.#storeParams(queryParams);\n    // Get the stored params\n    const storedParams = this.getStoredParams();\n    // Populate the form inputs\n    if (Object.keys(storedParams).length > 0) {\n      this.#populateFormInputs(storedParams, this.domainUTMs);\n    }\n  }\n\n  /**\n   * Log initialization message\n   * @returns {void}\n   * @private\n   */\n\n  #logInitialization() {\n    // Branded console log message\n    console.log(\n      `%c Queryform` + `%c v1.0` + `%c Data synced.`,\n      'background: #222; color: #2563eb; padding: 10px;',\n      'background: #222; color: #fff; font-size:8px; padding: 12px 10px;',\n      'background: #222; color: #777; font-size:8px; padding: 12px 10px;'\n    );\n  }\n\n  /**\n   * Check if localStorage is available\n   * @returns {boolean}\n   * @private\n   */\n\n  #isLocalStorageAvailable() {\n    return typeof Storage !== 'undefined';\n  }\n\n  /**\n   * Parse URL parameters\n   * @returns {Object}\n   * @private\n   */\n\n  #parseURLParams() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const utms = {};\n    this.domainUTMs.forEach(({ param }) => {\n      if (urlParams.has(param)) {\n        utms[param] = urlParams.get(param);\n      }\n    });\n    return Object.keys(utms).length > 0 ? utms : null;\n  }\n\n  /**\n   * Store URL parameters in localStorage\n   * @param {Object} queryParams - URL parameters\n   * @returns {Object}\n   * @private\n   */\n\n  #storeParams(queryParams) {\n    if (!this.#isLocalStorageAvailable() || !queryParams) return;\n    const storedParams = this.getStoredParams() || {};\n    this.domainUTMs.forEach(({ param, class_name }) => {\n      if (queryParams[param]) {\n        storedParams[param] = {\n          class_name,\n          value: queryParams[param],\n        };\n      }\n    });\n    localStorage.setItem('queryform_data', JSON.stringify(storedParams));\n    return storedParams;\n  }\n\n  /**\n   * Get stored parameters from localStorage\n   * @returns {Object}\n   */\n\n  getStoredParams() {\n    if (this.#isLocalStorageAvailable()) {\n      return JSON.parse(localStorage.getItem('queryform_data')) || {};\n    }\n    return {};\n  }\n\n  /**\n   * Populate form inputs with stored parameters\n   * @param {Object} storedParams - Stored parameters\n   * @param {Array} domainUTMs - Domain parameters\n   * @returns {void}\n   * @private\n   */\n\n  #populateFormInputs(storedParams, domainUTMs) {\n    const inputSelectors = Object.values(storedParams).map(\n      ({ class_name }) => `.${class_name}`\n    );\n    const inputs = document.querySelectorAll(inputSelectors.join(','));\n\n    inputs.forEach((inputElement) => {\n      const input = inputElement.tagName.toLowerCase() === 'input' ? inputElement : inputElement.querySelector('input');\n      if (!input) return;\n\n      const inputClass = inputElement.className.split(' ').find(\n        className => inputSelectors.includes(`.${className}`)\n      );\n\n      if (inputClass) {\n        const matchingUTM = domainUTMs.find(({ class_name }) => class_name === inputClass);\n        if (matchingUTM) {\n          input.value = storedParams[matchingUTM.param]?.value || '';\n        }\n      }\n    });\n  }\n\n}\n\nexport default Queryform;\n"],"names":["_Queryform_instances","fetchDomainParams_fn","fetchLocalParams_fn","configureQueryform_fn","logInitialization_fn","isLocalStorageAvailable_fn","parseURLParams_fn","storeParams_fn","populateFormInputs_fn","Queryform","websiteId","apiRoute","__privateAdd","config","utms","__privateMethod","response","err","param","class_name","queryParams","storedParams","urlParams","domainUTMs","inputSelectors","inputElement","_a","input","inputClass","className","matchingUTM"],"mappings":"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"}