{"version":3,"file":"queryform.umd.js","sources":["../src/queryform.js"],"sourcesContent":["class Queryform {\n\n  constructor(websiteId = null, apiRoute = 'https://queryform.co/api/website/') {\n    this.websiteId = websiteId;\n    this.domainUTMs = [];\n    this.apiRoute = apiRoute;\n  }\n\n  /**\n   * Fetch domain parameters from the API\n   * @returns {Promise<void>}\n   */\n\n  async #fetchDomainParams() {\n    try {\n      const response = await fetch(`${this.apiRoute}${this.websiteId}`);\n      if (response.ok) {\n        this.domainUTMs = await response.json();\n      } else {\n        console.warn('Failed to fetch domain parameters:', response.statusText);\n      }\n    } catch (err) {\n      console.warn('Error fetching domain parameters:', err);\n    }\n  }\n\n  /**\n   * Initialize the Queryform\n   * @param {Object} config - Configuration object\n   * @param {boolean} config.debug - Enable debug mode\n   * @returns {void}\n   * @example\n   * Retrieve domain parameters from Queryform API\n   * const queryform = new Queryform('xxxx-xxxx-xxxx-xxxx');\n   * queryform.init();\n   * @example\n   * Use local domain parameters\n   * const queryform = new Queryform();\n   * queryform.init({ local: true }, [ { param: 'utm_source', class_name: 'qf_utm_source' } ]);\n   */\n\n  async init(config = { debug: false, local: false }, utms = []) {\n    if(config.debug) this.#logInitialization();\n    config.local ? await this.#fetchLocalParams(utms) : await this.#fetchDomainParams();\n    await this.#configureQueryform();\n  }\n\n  /**\n   * Fetch local domain parameters\n   * @param {Array} utms - Local domain parameters\n   * @returns {void}\n   * @private\n   */\n\n  async #fetchLocalParams(utms) {\n    // validate the format of the utms array\n    if (!Array.isArray(utms)) {\n      console.warn('Invalid utms array:', utms);\n      return;\n    }\n    // validate the format of the utms array sub-items\n    if (utms.some(({ param, class_name }) => !param || !class_name)) {\n      console.warn('Invalid utms array sub-items:', utms);\n      return;\n    }\n    // store the utms array\n    this.domainUTMs = utms;\n  }\n\n  /**\n   * Configure the Queryform\n   * @returns {void}\n   * @private\n   */\n\n  #configureQueryform() {\n    // Check if domainUTMs is empty\n    const queryParams = this.#parseURLParams();\n    // Store the query params\n    this.#storeParams(queryParams);\n    // Get the stored params\n    const storedParams = this.getStoredParams();\n    // Populate the form inputs\n    if (Object.keys(storedParams).length > 0) {\n      this.#populateFormInputs(storedParams, this.domainUTMs);\n    }\n  }\n\n  /**\n   * Log initialization message\n   * @returns {void}\n   * @private\n   */\n\n  #logInitialization() {\n    // Branded console log message\n    console.log(\n      `%c Queryform` + `%c v1.0` + `%c Data synced.`,\n      'background: #222; color: #2563eb; padding: 10px;',\n      'background: #222; color: #fff; font-size:8px; padding: 12px 10px;',\n      'background: #222; color: #777; font-size:8px; padding: 12px 10px;'\n    );\n  }\n\n  /**\n   * Check if localStorage is available\n   * @returns {boolean}\n   * @private\n   */\n\n  #isLocalStorageAvailable() {\n    return typeof Storage !== 'undefined';\n  }\n\n  /**\n   * Parse URL parameters\n   * @returns {Object}\n   * @private\n   */\n\n  #parseURLParams() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const utms = {};\n    this.domainUTMs.forEach(({ param }) => {\n      if (urlParams.has(param)) {\n        utms[param] = urlParams.get(param);\n      }\n    });\n    return Object.keys(utms).length > 0 ? utms : null;\n  }\n\n  /**\n   * Store URL parameters in localStorage\n   * @param {Object} queryParams - URL parameters\n   * @returns {Object}\n   * @private\n   */\n\n  #storeParams(queryParams) {\n    if (!this.#isLocalStorageAvailable() || !queryParams) return;\n    const storedParams = this.getStoredParams() || {};\n    this.domainUTMs.forEach(({ param, class_name }) => {\n      if (queryParams[param]) {\n        storedParams[param] = {\n          class_name,\n          value: queryParams[param],\n        };\n      }\n    });\n    localStorage.setItem('queryform_data', JSON.stringify(storedParams));\n    return storedParams;\n  }\n\n  /**\n   * Get stored parameters from localStorage\n   * @returns {Object}\n   */\n\n  getStoredParams() {\n    if (this.#isLocalStorageAvailable()) {\n      return JSON.parse(localStorage.getItem('queryform_data')) || {};\n    }\n    return {};\n  }\n\n  /**\n   * Populate form inputs with stored parameters\n   * @param {Object} storedParams - Stored parameters\n   * @param {Array} domainUTMs - Domain parameters\n   * @returns {void}\n   * @private\n   */\n\n  #populateFormInputs(storedParams, domainUTMs) {\n    const inputSelectors = Object.values(storedParams).map(\n      ({ class_name }) => `.${class_name}`\n    );\n    const inputs = document.querySelectorAll(inputSelectors.join(','));\n\n    inputs.forEach((inputElement) => {\n      const input = inputElement.tagName.toLowerCase() === 'input' ? inputElement : inputElement.querySelector('input');\n      if (!input) return;\n\n      const inputClass = inputElement.className.split(' ').find(\n        className => inputSelectors.includes(`.${className}`)\n      );\n\n      if (inputClass) {\n        const matchingUTM = domainUTMs.find(({ class_name }) => class_name === inputClass);\n        if (matchingUTM) {\n          input.value = storedParams[matchingUTM.param]?.value || '';\n        }\n      }\n    });\n  }\n\n}\n\nexport default Queryform;\n"],"names":["Queryform","websiteId","apiRoute","__privateAdd","_Queryform_instances","config","utms","__privateMethod","logInitialization_fn","fetchLocalParams_fn","fetchDomainParams_fn","configureQueryform_fn","isLocalStorageAvailable_fn","response","err","param","class_name","queryParams","parseURLParams_fn","storeParams_fn","storedParams","populateFormInputs_fn","urlParams","domainUTMs","inputSelectors","inputElement","input","inputClass","className","matchingUTM","_a"],"mappings":"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"}