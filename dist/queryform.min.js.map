{"version":3,"file":"queryform.min.js","sources":["../src/queryform.js"],"sourcesContent":["class QueryForm {\n\n  constructor(websiteId, apiRoute = 'https://queryform.test/api/website/') {\n    this.websiteId = websiteId;\n    this.domainUTMs = [];\n    this.apiRoute = apiRoute;\n  }\n\n  async #getDomainParamsFromQueryform() {\n      try {\n        const response = await fetch(this.apiRoute + this.websiteId);\n        if (response.ok) {\n          this.domainUTMs = await response.json();\n        }\n      } catch (err) {\n        console.warn('Something went wrong.', err);\n      }\n  }\n\n  init(config = { debug: false }) {\n\n    this.#getDomainParamsFromQueryform().then(() => {\n      this.#configureQueryform();\n    });\n\n    if(config.debug){\n      console.log(`%c Queryform` + `%c v1.0` + `%c Data synced.`, 'background: #222; color: #2563eb; padding: 10px 10px 10px 10px;', 'background: #222; color: #fff; font-size:8px; padding: 12px 10px 11px 0;', 'background: #222; color: #777; font-size:8px; padding: 12px 10px 11px 0');\n    }\n\n  }\n\n  #configureQueryform() {\n      const queryStrings = this.#parseURLParams();\n      this.#saveParams(queryStrings);\n      const utms = this.getStoredParams();\n      // Check if the domain has any utm parameters stored in local storage\n      if(Object.keys(utms).length !== 0){\n          this.#populateFormInputs(utms, this.domainUTMs);\n      }\n    }\n\n  #isLocalStorageAvailable() {\n    return typeof(Storage) !== 'undefined';\n  }\n\n  #parseURLParams() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const utms = {};\n    const arr = Object.values(this.domainUTMs);\n\n    arr.forEach((domainUTM) => {\n      if (urlParams.has(domainUTM.param)) {\n        utms[domainUTM.param] = urlParams.get(domainUTM.param);\n      }\n    });\n\n    return Object.keys(utms).length !== 0 ? utms : false;\n  }\n\n  #saveParams(queryStrings) {\n    if (this.#isLocalStorageAvailable()) {\n      let utms = this.getStoredParams();\n      if (queryStrings) {\n        if (!utms) {\n          utms = {};\n        }\n\n        this.domainUTMs.forEach((domainUTM) => {\n          if (queryStrings[domainUTM.param]) {\n            utms[domainUTM.param] = {\n              class_name: domainUTM.class_name,\n              value: queryStrings[domainUTM.param]\n            };\n          }\n        });\n\n        localStorage.setItem('queryform_data', JSON.stringify(utms));\n      }\n    }\n  }\n\n  getStoredParams() {\n      if (!this.#isLocalStorageAvailable()) return {};\n      const storedParams = localStorage.getItem('queryform_data');\n      return storedParams ? JSON.parse(storedParams) : {};\n  }\n\n  #populateFormInputs(utms, domainUTMs) {\n\n    let formInputClasses = [];\n    let arrDomainUTMs = Object.values(domainUTMs);\n\n    Object.keys(utms).forEach(function(key, index) {\n      formInputClasses.push('.' + utms[key].class_name);\n    });\n\n    const formInputs = document.querySelectorAll(formInputClasses);\n\n    formInputs.forEach((inputElement) => {\n      const input = inputElement.tagName.toLowerCase() === 'input' ? inputElement : inputElement.querySelector('input');\n      if (!input) return;\n\n      const classNames = inputElement.className.split(' ');\n\n      classNames.forEach((className) => {\n        if (formInputClasses.includes('.' + className)) {\n          arrDomainUTMs.forEach((domainUTM) => {\n            if (className === domainUTM.class_name) {\n              input.value = utms[domainUTM.param].value;\n            }\n          });\n        }\n      });\n    });\n\n  }\n\n}\n\nexport default QueryForm;\n\n// Optionally, add it to the window object\n// window.QueryForm = QueryForm;\n"],"names":["QueryForm","websiteId","apiRoute","__privateAdd","_QueryForm_instances","config","__privateMethod","getDomainParamsFromQueryform_fn","configureQueryform_fn","isLocalStorageAvailable_fn","storedParams","response","err","queryStrings","parseURLParams_fn","saveParams_fn","utms","populateFormInputs_fn","urlParams","domainUTM","domainUTMs","formInputClasses","arrDomainUTMs","key","index","inputElement","input","className"],"mappings":"4dAAA,MAAMA,CAAU,CAEd,YAAYC,EAAWC,EAAW,sCAAuC,CAF3EC,EAAA,KAAAC,GAGI,KAAK,UAAYH,EACjB,KAAK,WAAa,GAClB,KAAK,SAAWC,CACjB,CAaD,KAAKG,EAAS,CAAE,MAAO,EAAK,EAAI,CAE9BC,EAAA,KAAKF,EAAAG,GAAL,WAAqC,KAAK,IAAM,CAC9CD,EAAA,KAAKF,EAAAI,GAAL,UACN,CAAK,EAEEH,EAAO,OACR,QAAQ,IAAI,qCAAgD,kEAAmE,2EAA4E,yEAAyE,CAGvR,CAoDD,iBAAkB,CACd,GAAI,CAACC,EAAA,KAAKF,EAAAK,GAAL,WAAiC,MAAO,CAAA,EAC7C,MAAMC,EAAe,aAAa,QAAQ,gBAAgB,EAC1D,OAAOA,EAAe,KAAK,MAAMA,CAAY,EAAI,CAAA,CACpD,CAgCH,CArHA,OAAAN,EAAA,YAQQG,EAA6B,gBAAG,CAClC,GAAI,CACF,MAAMI,EAAW,MAAM,MAAM,KAAK,SAAW,KAAK,SAAS,EACvDA,EAAS,KACX,KAAK,WAAa,MAAMA,EAAS,KAAI,EAExC,OAAQC,EAAK,CACZ,QAAQ,KAAK,wBAAyBA,CAAG,CAC1C,CACJ,EAcDJ,EAAmB,UAAG,CAClB,MAAMK,EAAeP,EAAA,KAAKF,EAAAU,GAAL,WACrBR,EAAA,KAAKF,EAAAW,GAAL,UAAiBF,GACjB,MAAMG,EAAO,KAAK,kBAEf,OAAO,KAAKA,CAAI,EAAE,SAAW,GAC5BV,EAAA,KAAKF,EAAAa,GAAL,UAAyBD,EAAM,KAAK,WAEzC,EAEHP,EAAwB,UAAG,CACzB,OAAO,OAAO,QAAa,GAC5B,EAEDK,EAAe,UAAG,CAChB,MAAMI,EAAY,IAAI,gBAAgB,OAAO,SAAS,MAAM,EACtDF,EAAO,CAAA,EAGb,OAFY,OAAO,OAAO,KAAK,UAAU,EAErC,QAASG,GAAc,CACrBD,EAAU,IAAIC,EAAU,KAAK,IAC/BH,EAAKG,EAAU,KAAK,EAAID,EAAU,IAAIC,EAAU,KAAK,EAE7D,CAAK,EAEM,OAAO,KAAKH,CAAI,EAAE,SAAW,EAAIA,EAAO,EAChD,EAEDD,EAAW,SAACF,EAAc,CACxB,GAAIP,EAAA,KAAKF,EAAAK,GAAL,WAAiC,CACnC,IAAIO,EAAO,KAAK,kBACZH,IACGG,IACHA,EAAO,CAAA,GAGT,KAAK,WAAW,QAASG,GAAc,CACjCN,EAAaM,EAAU,KAAK,IAC9BH,EAAKG,EAAU,KAAK,EAAI,CACtB,WAAYA,EAAU,WACtB,MAAON,EAAaM,EAAU,KAAK,CACjD,EAEA,CAAS,EAED,aAAa,QAAQ,iBAAkB,KAAK,UAAUH,CAAI,CAAC,EAE9D,CACF,EAQDC,EAAmB,SAACD,EAAMI,EAAY,CAEpC,IAAIC,EAAmB,CAAA,EACnBC,EAAgB,OAAO,OAAOF,CAAU,EAE5C,OAAO,KAAKJ,CAAI,EAAE,QAAQ,SAASO,EAAKC,EAAO,CAC7CH,EAAiB,KAAK,IAAML,EAAKO,CAAG,EAAE,UAAU,CACtD,CAAK,EAEkB,SAAS,iBAAiBF,CAAgB,EAElD,QAASI,GAAiB,CACnC,MAAMC,EAAQD,EAAa,QAAQ,YAAa,IAAK,QAAUA,EAAeA,EAAa,cAAc,OAAO,EAChH,GAAI,CAACC,EAAO,OAEOD,EAAa,UAAU,MAAM,GAAG,EAExC,QAASE,GAAc,CAC5BN,EAAiB,SAAS,IAAMM,CAAS,GAC3CL,EAAc,QAASH,GAAc,CAC/BQ,IAAcR,EAAU,aAC1BO,EAAM,MAAQV,EAAKG,EAAU,KAAK,EAAE,MAElD,CAAW,CAEX,CAAO,CACP,CAAK,CAEF"}